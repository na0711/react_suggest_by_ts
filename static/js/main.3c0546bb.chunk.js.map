{"version":3,"sources":["Suggest.tsx","serviceWorker.js","index.js"],"names":["List","props","isVisible","query","filterList","length","name","react_default","a","createElement","className","map","obj","index","focusFlg","focus","concat","data-key","code","key","onClick","onclick","Suggest","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","originList","url","suggestDom","React","createRef","state","fetchList","listClose","bind","assertThisInitialized","handleClick","event","target","dataset","clickObj","find","setState","value","keyCode","which","moveFocus","selectSuggest","step","_this2","fetch","then","response","clone","json","Error","list","data","catch","e","console","log","_this3","flag","path","forEach","thisPath","current","_this4","filter","yomi","indexOf","ref","type","onChange","handleChange","onKeyUp","handleKeyup","document","addEventListener","prevProps","prevState","getElementsByClassName","items","itemsHeight","i","getBoundingClientRect","height","scrollTop","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_Suggest_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c0546bb.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Suggest.scss';\ninterface List {\n  yomi:string,\n  code:string,\n  name:string\n}\ninterface SuggestState{\n  query: any,\n  focus: number,\n  isVisible: boolean,\n  [stateName: string]: any;\n}\ninterface SuggestProps extends SuggestState{\n  filterList: List[],\n}\n\nfunction List(props: SuggestProps){\n  // 他要素クリック時や、ページ読み込み時には表示しない\n  if(!props.isVisible){\n    return null;\n  }\n\n  // クエリ未入力時には表示しない\n  if(props.query === ''){\n    return null;\n  }\n\n  // すでに選択済みの場合は表示しない\n  if(props.filterList.length === 1 && props.filterList[0] && props.filterList[0].name === props.query){\n    return null;\n  }\n\n  // 候補が見つからない場合\n  if(props.filterList.length === 0){\n    return (\n      <div className=\"suggest__list-wrap\">\n        <div className=\"suggest__list\">\n          <div className=\"suggest__list-item is-notfound\">候補が見つかりません</div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"suggest__list-wrap\">\n      <ul className=\"suggest__list\">\n        {props.filterList.map((obj, index)=>{\n          const focusFlg = (index === props.focus)? \"is-focus\":\"\";\n          return (\n            <li className={`suggest__list-item ${focusFlg}`} data-key={obj.code} key={obj.code} onClick={props.onclick}>\n              {obj.name}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nclass Suggest extends React.Component<SuggestProps,SuggestState>{\n  private filterList: List[] = []; \n  private originList: List[] = [];\n  private url: string;\n  private suggestDom:any = React.createRef();\n\n  constructor(props:SuggestProps) {\n    super(props);\n    this.state = {\n      query: '',\n      focus: -1,\n      isVisible: false\n    }; \n    this.url = props.url;\n    this.fetchList(); // 全候補を取得してstateを更新\n    this.listClose = this.listClose.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick (event: any){\n    const key = event!.target!.dataset!.key,\n      clickObj = this.filterList.find(obj => {\n        return obj.code === key\n      });\n    if(clickObj && clickObj.name){\n      this.setState({\n        query:clickObj.name,\n        focus:-1,\n      });\n    }\n  }\n\n  handleChange (event: any) {\n    const isVisible = event.target.value !==　'' ? true : false;\n    this.setState({\n      query: event.target.value,\n      focus:-1,\n      isVisible:isVisible\n    });\n  }\n\n  handleKeyup(event: any){\n    const keyCode = event.which || event.keyCode || 0;\n    if(keyCode === 38){\n      this.moveFocus(-1);\n      return false;\n    }else if(keyCode === 40){\n      this.moveFocus(1);\n      return false;\n    }else if(keyCode === 13){\n      this.selectSuggest();\n      return false;\n    }\n  }\n\n  moveFocus(step: number){\n    // 非表示時にはUpKeyは無効\n    if(!this.state.isVisible && step === 1){\n      return false;\n    }\n    // focusが最下部にある時にはUpDownは無効\n    if(this.state.focus === this.filterList.length -1 && step === 1){\n      return false;\n    }\n    this.setState({focus:this.state.focus + step});\n  }\n\n  selectSuggest(){\n    if(this.state.focus === -1){\n      return false;\n    }\n    this.setState({\n      query:this.filterList[this.state.focus].name,\n      focus:-1\n    });\n  }\n\n  fetchList(){\n    fetch(this.url).then((response) => {\n      if(response.clone().json()){\n        return response.clone().json();\n      }else{\n        throw new Error(\"file not found.\");\n      }\n    }).then((list)=>{\n      this.originList =list.data;\n    }).catch((e)=>{\n      console.log(e);\n    });\n  }\n\n  listClose(event: any){\n    // クリックした要素がsuggestWrapper内の要素かを判定\n\t\tlet flag=false;\n    event.path.forEach((thisPath:any) => {\n      flag=(thisPath === this.suggestDom.current)? true : flag;\n    });\n    //要素外をクリックした場合はサジェストを非表示に\n    if(!flag && this.state.isVisible){\n      this.setState({isVisible:false});\n    }\n  }\n\n  render(): JSX.Element {\n    const query = this.state.query;\n    this.filterList = this.originList.filter((obj)=>{\n      return (query !== '' && (~obj.yomi.indexOf(query) || ~obj.name.indexOf(query)))\n    });\n    return (\n      <div className=\"suggest\" ref={this.suggestDom}>\n        <input type=\"text\" name=\"hoge\" value={query} onChange={(e) => this.handleChange(e)} onKeyUp={(e) => {this.handleKeyup(e)}} className=\"suggest__input\" />\n        <List filterList={this.filterList} query={query} isVisible={this.state.isVisible} focus={this.state.focus} onclick={this.handleClick}/>\n      </div>\n    );\n  }\n\n  componentDidMount(){\n    document.addEventListener('click', this.listClose);\n  }\n\n  componentDidUpdate(prevProps: SuggestProps, prevState: SuggestState) {\n    // 上下カーソル入力があった再描画の場合のみ、スクロール位置合わせを実行\n    if(this.state.focus !== -1 && this.state.focus !== prevState.focus){\n      const index = this.state.focus;\n      const list = this.suggestDom.current.getElementsByClassName('suggest__list-wrap');\n      const items = this.suggestDom.current.getElementsByClassName('suggest__list-item');\n      if(list[0] && items[index]){\n        let itemsHeight = 0;\n        for(let i = 0; i < index; i++){\n          const thisHeight = items[i].getBoundingClientRect().height;\n          itemsHeight += thisHeight;\n        }\n        list[0].scrollTop = itemsHeight;\n      };\n    }\n  }\n}\n\nexport default Suggest;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Suggest from './Suggest.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Suggest url=\"/suggest_list.json\"/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}